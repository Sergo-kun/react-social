{"version":3,"sources":["redux/profile-reducer.js","redux/dialog-reducer.js","components/Friends/Friends.module.css","api/api.js","components/Nav/Nav.module.css","reportWebVitals.js","components/Nav/Nav.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","common/paginator/Paginator.jsx","components/Friends/Friends.jsx","redux/users-reducer.js","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/friend-reducer.js","redux/redux-store.js","components/Friends/FriendsContainer.jsx","App.js","hoc/withSuspense.js","index.js","assets/images/Spinner-1s-200px.svg","common/Preloader.jsx","components/Users/Users.module.css","assets/images/user-png-image-9.png","components/Header/Header.module.css","components/Login/Login.module.css","hoc/withAuthRedirect.js"],"names":["ADD_POST","DELETE_POST","GET_PROFILE","GET_STATUS","initialState","posts","id","items","like","name","info","status","addPost","newPostText","type","getStatusSuccess","getProfile","userId","dispatch","a","profileApi","responce","profile","data","getProfileStatus","getStatus","updateStatus","resultCode","profileReducer","state","action","postSpace","filter","p","postId","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","dialogs","newMessageText","messages","message","updateNewMessageText","text","newMessage","sendMessage","dialogReducer","messageSpace","module","exports","instance","axios","withCredentials","baseURL","headers","getFriendsApi","getFriends","activePage","usersCount","get","getUsersApi","getUsers","then","unfollow","delete","follow","post","put","getAuthApi","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Nav","props","className","classes","nav","ollItem","item","to","activeClassName","active","Music","News","Settings","Paginator","totalCount","clickPage","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","map","selectedPage","Friends","friends","u","src","photos","small","imageUser","FOLLOW","UNFOLLOW","SET_USERS","SET_ACTIVE_PAGE","SET_TOTAL_COUNT","FETCHING_SVG_SHOW","FETCHING_BUTTON_FOLLOW_SHOW","users","isFetching","isFetchingButtonFollow","followSuccess","unfollowSuccess","setActivePage","page","fetchingSvgShow","boolean","fetchingButtonFollow","usersId","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","Users","disabled","some","getUsersSelector","createSelector","usersPage","n","usersCountSelector","totalCountSelector","activePageSelector","isFetchingSelector","isFetchingButtonFollowSelector","UsersApiComponent","this","isAuth","Preloader","React","Component","withAuthRedirectComponent","withAuthRedirect","UsersContainer","connect","bind","Header","header","loginBlock","GET_USER_DATA","LOGIN_ERROR","isError","setAuthUserDataSuccess","loginErrorSuccess","setAuthUserData","response","authReducer","HeaderContainer","auth","initialValues","checkBox","validate","values","errors","test","LoginForm","onSubmit","setSubmitting","setTimeout","touched","handleChange","handleBlur","handleSubmit","isSubmitting","placeholder","onChange","onBlur","value","errorLOrP","formData","INITIALIZED_SUCCESS","initialized","appReducer","GET_FRIENDS","IS_FETCHING","getFriendsSuccess","friendReducer","reducers","combineReducers","friendsPage","profilePage","friendPage","dialogPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","FriendsContainer","useEffect","DialogsContainer","lazy","ProfileContainer","App","initializeApp","render","Suspense","fallback","path","component","Login","AppContainer","promise","Promise","all","AppReactSamurai","StrictMode","ReactDOM","document","getElementById","fetchingImg","mapStateForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.7d27304f.chunk.js","sourcesContent":["import {getUsersApi, profileApi} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\n\r\nconst GET_PROFILE = \"GET_PROFILE\";\r\nconst GET_STATUS = \"GET_STATUS\";\r\n\r\n\r\nlet initialState = {\r\n\r\n        posts: [\r\n            {id: 0, items: \"Я в своем самопознании натолько преисполнился\", like: 100, name: \"Сергей Коваленко\"},\r\n            {id: 1, items: \"Если ты первый - ТЫ ПЕРВЫЙ!\", like: 100, name: \"Сергей Коваленко\"},\r\n        ],\r\n        info: null,\r\n        status: ''\r\n\r\n\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n\r\n            let postSpace = {\r\n                id: 2,\r\n                items: action.newPostText,\r\n                like: 0,\r\n                name: 'Сергей Коваленко'\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, postSpace],\r\n                newPostText: \"\"\r\n            }\r\n\r\n        }\r\n            case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((p) => p.id === action.postId)\r\n            }\r\n\r\n\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                info : {...action.profile}\r\n            }\r\n            case GET_STATUS:\r\n            return {\r\n                ...state,\r\n                status : action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport let addPost = (newPostText) => ({type : ADD_POST, newPostText});\r\nexport let deletePost = (postId) => ({type : DELETE_POST, postId});\r\nexport let getProfileSuccess = (profile) => ({type : GET_PROFILE, profile});\r\nexport let getStatusSuccess = (status) => ({type : GET_STATUS, status});\r\n\r\nexport const getProfile = (userId) => async (dispatch) =>  {\r\n\r\n    let responce = await profileApi.getProfile(userId)\r\n\r\n        dispatch(getProfileSuccess(responce.data))\r\n\r\n    }\r\n\r\nexport const getProfileStatus = (userId) => async (dispatch) =>  {\r\n   let responce = await profileApi.getStatus(userId)\r\n\r\n        dispatch(getStatusSuccess( responce.data))\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) =>  {\r\n\r\n    let responce = await profileApi.updateStatus(status)\r\n\r\n    if(responce.resultCode === 0){\r\n\r\n        dispatch(getStatusSuccess(responce.data))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Саня\"},\r\n        {id: 2, name: \"Катя\"},\r\n        {id: 3, name: \"Коля\"},\r\n        {id: 4, name: \"Маша\"},\r\n        {id: 5, name: \"Іван\"}\r\n    ],\r\n    newMessageText : '',\r\n    messages: [\r\n        {message: \"Нюхай бебру\"},\r\n        {message: \"Нюхай бебру\"},\r\n        {message: \"Нюхай бебру\"},\r\n    ],}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  UPDATE_NEW_MESSAGE_TEXT :\r\n          return {...state,\r\n          newMessageText: action.newMessage\r\n          }\r\n\r\n        case  SEND_MESSAGE:\r\n            let messageSpace = state.newMessageText\r\n            return {...state,\r\n                newMessageText: \"\",\r\n                messages: [...state.messages, {message : messageSpace}]\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport let updateNewMessageText = (text) => ({type : UPDATE_NEW_MESSAGE_TEXT, newMessage : text});\r\nexport let sendMessage = () =>\r\n    ({type : SEND_MESSAGE});\r\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__3bfXm\"};","import * as axios from \"axios\";\r\n\r\n\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL : \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\" : \"a1c489b8-3e36-4a90-a7d3-130e9012edb9\"\r\n    }\r\n})\r\nexport const  getFriendsApi = {\r\n    getFriends  (activePage ,usersCount ) {\r\n        return (\r\n\r\n            instance.get(`users?friend=true&page=${activePage}&count=${usersCount}`,{})\r\n\r\n            )\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nexport const getUsersApi = {\r\n    getUsers(activePage,usersCount){\r\n        return (\r\n            instance.get(`users?page=${activePage}&count=${usersCount}`, {})\r\n                .then(responce => {\r\n                    return responce.data\r\n                }\r\n            )\r\n        )\r\n    },\r\n    unfollow(id) {\r\n        return( instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${id}` , {}).\r\n        then(responce => {\r\n            return responce.data\r\n\r\n        }))\r\n    },\r\n\r\n    follow(id) {\r\n        return( instance.post(`https://social-network.samuraijs.com/api/1.0/follow/${id}` , {} , {}).\r\n            then(responce => {\r\n                return responce.data\r\n        }))\r\n    }\r\n\r\n}\r\nexport const profileApi ={\r\n    getProfile(userId){\r\n        return (\r\n            instance.get('profile/'+ userId))\r\n    },\r\n    getStatus(userId){\r\n        return (\r\n            instance.get('profile/status/'+ userId)\r\n        )\r\n    },\r\n    updateStatus(status){\r\n        return (\r\n\r\n            instance.put('profile/status/' , {status : status}))\r\n    },\r\n}\r\nexport const getAuthApi = {\r\n    me(){\r\n        return (\r\n            instance.get(`auth/me`, {})\r\n    )\r\n    },\r\n\r\n    login(email, password, rememberMe){\r\n\r\n        return(\r\n            instance.post('auth/login',{email, password, rememberMe})\r\n        )\r\n    },\r\n    logout(){\r\n        return(\r\n            instance.delete('auth/login',)\r\n        )\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__30B0M\",\"item\":\"Nav_item__1NL6p\",\"active\":\"Nav_active__2RqVo\",\"ollItem\":\"Nav_ollItem__1VDxt\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport classes from './Nav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.ollItem}>\r\n                <div className={classes.item}><NavLink to={\"/profile\"} activeClassName={classes.active}>Profile</NavLink></div>\r\n                <div className={classes.item}><NavLink to=\"/friends\" activeClassName={classes.active}>Friends</NavLink></div>\r\n                {/*activeClassName={classes.active} коли силка активна їй буде надаватися стиль*/}\r\n                <div className={classes.item}><NavLink to=\"/messages\" activeClassName={classes.active}>Messages</NavLink></div>\r\n                <div className={`${classes.item}`}><NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink></div>\r\n                <div className={classes.item}><NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink></div>\r\n                <div className={classes.item}><NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink></div>\r\n                <div className={classes.item}><NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink></div>\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction Music(props) {\r\n    return (\r\n        <div>Music</div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nfunction News(props) {\r\n    return (\r\n        <div>News</div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nfunction Settings(props) {\r\n    return (\r\n        <div>Settings</div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, {useState} from 'react'\r\nimport classes from \"../../components/Users/Users.module.css\";\r\n\r\n\r\n\r\nlet Paginator = ({totalCount, usersCount, activePage, clickPage, portionSize = 10}) => {\r\ndebugger\r\n    let pageCount = Math.ceil(totalCount / usersCount)\r\n\r\n    let pages = [];\r\n\r\n    for (let i=1; i <= pageCount ; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pageCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.paginator}>\r\n            { portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber-1)}>PREVIOUS</button>\r\n            }\r\n\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span onClick={() => {clickPage(p)}}\r\n                             className={activePage === p ? classes.selectedPage : p}>{p} </span>\r\n            })}\r\n            {  portionCount > portionNumber  &&\r\n            <button onClick={() => setPortionNumber(portionNumber+1)}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport imageUser from \"../../assets/images/user-png-image-9.png\";\r\nimport Paginator from \"../../common/paginator/Paginator\";\r\n\r\n\r\nfunction Friends(props) {\r\n    return (\r\n       <div>\r\n           <Paginator usersCount={props.usersCount}\r\n                      activePage={props.activePage}\r\n                      totalCount={props.totalCount}\r\n                      clickPage={props.clickPage}\r\n           />\r\n           {props.friends.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small !== null ? u.photos.small : imageUser}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n                </span>\r\n               <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>\"u.resident.country\"</div>\r\n                        <div>\"u.resident.city\"</div>\r\n                    </span>\r\n                </span>\r\n           </div>)}\r\n\r\n\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Friends;","import {getUsersApi} from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_ACTIVE_PAGE = \"SET_ACTIVE_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst FETCHING_SVG_SHOW = \"FETCHING_SHOW\";\r\nconst FETCHING_BUTTON_FOLLOW_SHOW = \"FETCHING_BUTTON_FOLLOW_SHOW\";\r\n\r\n\r\nlet initialState = {\r\n        users: [ ],\r\n        usersCount : 10,\r\n        totalCount : 0,\r\n        activePage : 1,\r\n        isFetching: false,\r\n        isFetchingButtonFollow: [],\r\n\r\n\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users : state.users.map(u => {\r\n                    if (action.userId === u.id){\r\n                        return {...u, followed : true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (action.userId === u.id){\r\n                        return {...u, followed : false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n\r\n            return {\r\n                ...state,\r\n                 users : action.users\r\n            }\r\n        case SET_ACTIVE_PAGE:\r\n            return {\r\n               ...state ,\r\n                activePage : action.page\r\n            }\r\n            case SET_TOTAL_COUNT:\r\n            return {\r\n               ...state ,\r\n                totalCount : action.count\r\n            }\r\n            case FETCHING_SVG_SHOW:\r\n            return {\r\n               ...state ,\r\n                isFetching : action.boolean\r\n            }\r\n        case FETCHING_BUTTON_FOLLOW_SHOW:\r\n            return {\r\n                ...state,\r\n                isFetchingButtonFollow: action.boolean ?\r\n            [...state.isFetchingButtonFollow, action.usersId] :\r\n                    state.isFetchingButtonFollow.filter(id => id !== action.usersId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport let followSuccess = (userId) => ({type :FOLLOW,  userId});\r\nexport let unfollowSuccess = (userId) => ({type : UNFOLLOW,  userId});\r\nexport let setUsers = (users) => ({type : SET_USERS, users});\r\nexport let setActivePage = (page) => ({type : SET_ACTIVE_PAGE, page});\r\nexport let setTotalCount = (count) => ({type : SET_TOTAL_COUNT, count});\r\nexport let fetchingSvgShow = (boolean) => ({type : FETCHING_SVG_SHOW, boolean});\r\nexport let  fetchingButtonFollow = (boolean, usersId) => ({type : FETCHING_BUTTON_FOLLOW_SHOW, boolean, usersId});\r\n\r\n\r\n\r\nexport const getUsers = (activePage, usersCount) =>{\r\n    return async (dispatch) => {\r\n        dispatch(fetchingSvgShow(true))\r\n        dispatch(setActivePage(activePage));\r\n       let data = await getUsersApi.getUsers(activePage, usersCount)\r\n            dispatch(setUsers(data.items))\r\n            dispatch(fetchingSvgShow(false))\r\n            dispatch(setTotalCount(data.totalCount))\r\n\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator)  => {\r\n    dispatch(fetchingButtonFollow(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(fetchingButtonFollow(false, userId))\r\n}\r\n\r\nexport const follow = (userId) =>{\r\n    return async (dispatch) => {\r\n        let apiMethod = await getUsersApi.follow.bind(getUsersApi)\r\n        let actionCreator = followSuccess\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\nexport const unfollow = (userId) =>{\r\n    return async (dispatch) => {\r\n        let apiMethod = await getUsersApi.unfollow.bind(getUsersApi)\r\n        let actionCreator = unfollowSuccess\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport classes from \"./Users.module.css\";\r\nimport imageUser from \"../../assets/images/user-png-image-9.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../../common/paginator/Paginator\";\r\n\r\n\r\n\r\n\r\nfunction Users(props) {\r\n\r\n\r\n    return (\r\n            <div >\r\n                <Paginator usersCount={props.usersCount}\r\n                           activePage={props.activePage}\r\n                           totalCount={props.totalCount}\r\n                           clickPage={props.clickPage}\r\n                />\r\n\r\n                {props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small !== null ? u.photos.small : imageUser}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed ?  <button\r\n                                disabled={props.isFetchingButtonFollow.some(id => id === u.id)}\r\n                                onClick={() => {props.unfollow(u.id);}}>Unfollow</button> :\r\n                            <button disabled={props.isFetchingButtonFollow.some(id => id === u.id)}\r\n                                onClick={() => {props.follow(u.id);}}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>\"u.resident.country\"</div>\r\n                        <div>\"u.resident.city\"</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect'\r\nconst getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector(getUsers,users => {\r\n\r\n    return users.filter(n => true)\r\n})\r\nexport const usersCountSelector = (state) => {\r\n\r\n    return  state.usersPage.usersCount\r\n}\r\nexport const totalCountSelector = (state) => {\r\n    return  state.usersPage.totalCount\r\n}\r\nexport const activePageSelector = (state) => {\r\n    return  state.usersPage.activePage\r\n}\r\nexport const isFetchingSelector = (state) => {\r\n    return  state.usersPage.isFetching\r\n}\r\nexport const isFetchingButtonFollowSelector = (state) => {\r\n    return  state.usersPage.isFetchingButtonFollow\r\n}\r\n\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport React from 'react'\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setActivePage,\r\n    fetchingButtonFollow,\r\n    getUsers,\r\n\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport Users from \"./Users\";\r\nimport classes from \"./Users.module.css\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n    activePageSelector, getUsersSelector, isFetchingButtonFollowSelector, isFetchingSelector,\r\n    totalCountSelector,\r\n    usersCountSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersApiComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.activePage, this.props.usersCount)\r\n\r\n    }\r\n\r\n    clickPage = (p) => {\r\n\r\n    this.props.getUsers(p, this.props.usersCount)\r\n\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n        return <>\r\n            <div className={classes.users}>\r\n            {this.props.isFetching ?\r\n                <Preloader/>\r\n                : null}\r\n            <Users\r\n            clickPage={this.clickPage}\r\n            totalCount={this.props.totalCount}\r\n            usersCount={this.props.usersCount}\r\n            activePage={this.props.activePage}\r\n            users={this.props.usersPage}\r\n            unfollow={this.props.unfollow}\r\n            follow={this.props.follow}\r\n            fetchingButtonFollow={this.props.fetchingButtonFollow}\r\n            isFetchingButtonFollow={this.props.isFetchingButtonFollow}\r\n        />\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\n/*let mapState = (state) => {\r\n    return {\r\n        usersPage : state.usersPage.users,\r\n        usersCount : state.usersPage.usersCount,\r\n        totalCount : state.usersPage.totalCount,\r\n        activePage : state.usersPage.activePage,\r\n        isFetching : state.usersPage.isFetching,\r\n        isFetchingButtonFollow: state.usersPage.isFetchingButtonFollow,\r\n\r\n    }\r\n}*/\r\nlet mapState = (state) => {\r\n    return {\r\n        usersPage : getUsersSelector(state),\r\n        usersCount : usersCountSelector(state),\r\n        totalCount : totalCountSelector(state),\r\n        activePage : activePageSelector(state),\r\n        isFetching : isFetchingSelector(state),\r\n        isFetchingButtonFollow: isFetchingButtonFollowSelector(state)\r\n\r\n    }\r\n}\r\n\r\n\r\nlet withAuthRedirectComponent = withAuthRedirect(UsersApiComponent)\r\nlet UsersContainer = connect(mapState, {follow, unfollow, setActivePage, fetchingButtonFollow, getUsers})\r\n(withAuthRedirectComponent);\r\n\r\nexport default UsersContainer;","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n\r\n\r\n    return(\r\n        <header className={classes.header}>\r\n            <img src=\"https://support-tools.storage.googleapis.com/Snapchat-Ghost-logo-347777501.png\"/>\r\n            <div className={classes.loginBlock}>\r\n\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>  : <NavLink to={'/login'}>Login</NavLink>  }\r\n\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import {getAuthApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst GET_USER_DATA = \"GET_USER_DATA\";\r\nconst LOGIN_ERROR = \"LOGIN_ERROR\";\r\n\r\nlet initialState = {\r\n\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isError: false\r\n\r\n\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_DATA: {\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n\r\n            }\r\n        }\r\n        case LOGIN_ERROR: {\r\n\r\n            return {\r\n                ...state,\r\n                isError: action.boolean\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport let setAuthUserDataSuccess = (id, email, login, isAuth) => ({type: GET_USER_DATA, data : {id, email, login, isAuth}})\r\n\r\nexport let loginErrorSuccess = (boolean) => ({type: LOGIN_ERROR, boolean})\r\n\r\nexport const setAuthUserData =  () => async (dispatch) => {\r\n    let response = await getAuthApi.me() /*{withCredentials: true} - утверждаем что мы авторизованы */\r\n\r\n            if (response.data.resultCode === 0) { /*если resultCode === 0 то значит мы залогинины и можна диспачить данные для авторизации*/\r\n                let {email, id, login} = response.data.data;\r\n                dispatch(setAuthUserDataSuccess(id, email, login, true));\r\n            }\r\n\r\n\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) =>{\r\n\r\n   let response = await getAuthApi.login(email, password, rememberMe)\r\n\r\n        if (response.data.resultCode === 0){\r\n            dispatch(setAuthUserData())\r\n            dispatch(loginErrorSuccess(false))\r\n        }else\r\n        if (response.data.resultCode === 1){\r\n            dispatch(loginErrorSuccess(true))\r\n        }\r\n\r\n}\r\nexport const logout = () => async (dispatch) =>{\r\n    let response = await getAuthApi.logout()\r\n        if (response.data.resultCode === 0){\r\n            dispatch(setAuthUserDataSuccess(null, null, null, false))\r\n\r\n        }\r\n\r\n}\r\n\r\nexport default authReducer;","import React from 'react'\r\n\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        isAuth : state.auth.isAuth,\r\n\r\n        login : state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport classes from './Login.module.css'\r\nimport { Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\nconst initialValues = () =>{\r\n    return (\r\n        { email: '', password: '', checkBox: false}\r\n    )\r\n}\r\nconst validate = (values) =>{\r\n    const errors = {};\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    ) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    return errors;\r\n}\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) =>{\r\n    const onSubmit = (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            props.login(values)\r\n        }, 400);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validate={validate}\r\n            onSubmit={onSubmit}\r\n\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        placeholder=\"Email:\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                    />{errors.email && touched.email && errors.email}<br/>\r\n\r\n                    <input\r\n                        placeholder=\"Password:\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}\r\n                    /><br/>\r\n                    {errors.password && touched.password && errors.password}<input\r\n\r\n                        type=\"checkBox\"\r\n                        name=\"checkBox\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.checkBox}\r\n                    /><br/>\r\n\r\n\r\n                    <button type=\"submit\" >\r\n                        Submit\r\n                    </button>\r\n                    {props.isError ? <p className={classes.errorLOrP}>Incorrect password or email.</p> : null}\r\n                </form>\r\n            )}\r\n        </Formik>\r\n)\r\n}\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n\r\n        props.login(formData.email, formData.password, formData.checkBox);\r\n    }\r\n    if (props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div className={classes.login}>\r\n            <h4>Login</h4>\r\n            <LoginForm isError={props.isError} login={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\nconst mapState = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        isError: state.auth.isError\r\n    }\r\n}\r\n\r\nexport default connect(mapState,{login})(Login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {getAuthApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {setAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport let initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(setAuthUserData())\r\n\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import {getFriendsApi} from \"../api/api\";\r\n\r\n\r\n\r\nconst GET_FRIENDS = \"GET_FRIENDS\";\r\nconst IS_FETCHING = \"IS_FETCHING\";\r\nconst SET_ACTIVE_PAGE = \"SET_ACTIVE_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\n\r\nlet initialState = {\r\n    friends: [ ],\r\n    usersCount : 10,\r\n    totalCount : 0,\r\n    activePage : 1,\r\n    isFetching: false\r\n}\r\n\r\nconst friendReducer = (state = initialState, action) => {\r\nswitch (action.type) {\r\n\r\n    case GET_FRIENDS:\r\n        return {\r\n            ...state,\r\n            friends: action.friends\r\n        }\r\n    case IS_FETCHING:\r\n        return {\r\n            ...state,\r\n            isFetching: action.boolean\r\n        }\r\n    case SET_ACTIVE_PAGE:\r\n        return {\r\n            ...state ,\r\n            activePage : action.page\r\n        }\r\n    case SET_TOTAL_COUNT:\r\n        return {\r\n            ...state ,\r\n            totalCount : action.count\r\n        }\r\n    default:\r\n        return state;\r\n}\r\n\r\n}\r\nlet getFriendsSuccess = (friends) => ({type: GET_FRIENDS, friends})\r\nlet fetchingSvgShow = (boolean) => ({type: IS_FETCHING, boolean})\r\nlet setActivePage = (page) => ({type: SET_ACTIVE_PAGE, page})\r\nlet setTotalCount = (count) => ({type: SET_TOTAL_COUNT, count})\r\n\r\nexport let getFriends = (activePage, usersCount) => {\r\n    return async (dispatch) => {\r\n        dispatch(setActivePage(activePage))\r\n        dispatch(fetchingSvgShow(true))\r\n        let friends = await getFriendsApi.getFriends(activePage, usersCount)\r\n        dispatch(getFriendsSuccess(friends.data.items))\r\n\r\n        dispatch(setTotalCount(friends.data.totalCount))\r\n        dispatch(fetchingSvgShow(false))\r\n\r\n    }\r\n}\r\nexport default friendReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport friendReducer from \"./friend-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    friendsPage : friendReducer,\r\n    profilePage : profileReducer,\r\n    friendPage : friendReducer,\r\n    dialogPage : dialogReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n\r\nwindow._store_ = store;\r\n\r\n\r\nexport default store;","import React, {useEffect} from 'react';\r\nimport classes from './Friends.module.css'\r\nimport {getFriends} from \"../../redux/friend-reducer\";\r\nimport Friends from \"./Friends\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst FriendsApiComponent = (props) => {\r\n\r\n    useEffect( () => {\r\n        props.getFriends(props.activePage,props.usersCount)\r\n    },[props.activePage])\r\n\r\n\r\n   const clickPage = (p) => {\r\n        props.getFriends(p, props.usersCount)\r\n    }\r\n\r\n\r\n        {if (props.isAuth) return <Redirect to={'/login'}/>;\r\n    return <>\r\n        <div className={classes.friends}>\r\n            {props.isFetching ?\r\n                <Preloader/>\r\n                : null}\r\n           <Friends {...props} clickPage={clickPage}/>\r\n       </div>\r\n        </>\r\n        }\r\n\r\n}\r\nlet mapToProps = (state) => {\r\n\r\n    return {\r\n        friends: state.friendPage.friends,\r\n        activePage: state.friendPage.activePage,\r\n        usersCount: state.friendPage.usersCount,\r\n        totalCount: state.friendPage.totalCount,\r\n        isFetching: state.friendPage.isFetching\r\n    }\r\n}\r\n\r\nconst FriendsContainer = connect(mapToProps,{getFriends})(FriendsApiComponent)\r\n\r\nexport default FriendsContainer;","\nimport './App.css';\nimport  Nav from \"./components/Nav/Nav\";\nimport React from \"react\";\nimport  {withRouter,Route, BrowserRouter} from \"react-router-dom\"\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport Friends from \"./components/Friends/Friends\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./common/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\n\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component{\n    componentDidMount() {\n    this.props.initializeApp()\n    }\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    {/*<Fon/>*/}\n\n                    <Nav/>\n                    <div>\n\n                        <Route render={() => {\n                            return <React.Suspense fallback={<Preloader/>}>\n                                <DialogsContainer/>\n                            </React.Suspense>\n\n                        }\n                        } path=\"/messages\"/>\n                        <Route render={() => <FriendsContainer/>} path=\"/friends\"/>\n                        <Route render={() => <UsersContainer/>} path=\"/users\"/>\n\n                        <Route render={withSuspense(ProfileContainer)}\n                         path=\"/profile/:userId?\"/>\n                        <Route component={Music} path=\"/music\"/>\n                        <Route component={News} path=\"/news\"/>\n                        <Route component={Settings} path=\"/settings\"/>\n                        <Route component={Login} path=\"/login\"/>\n\n                    </div>\n                    {/*<Profile/>*/}\n\n\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\nconst mapStateTooProps = (state) => {\n    return{\n        initialized : state.app.initialized\n    }\n}\n\nlet AppContainer = compose(\n    connect(mapStateTooProps, {initializeApp})(App));\n\nlet AppReactSamurai = (props) => {\n    return <React.StrictMode>\n                <BrowserRouter>\n                <Provider store={store}>\n                    <AppContainer />\n                </Provider>\n            </BrowserRouter>\n    </React.StrictMode>\n\n\n}\nexport default AppReactSamurai","import React from 'react'\r\nimport Preloader from \"../common/Preloader\";\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","\nimport React from 'react';\nimport './index.css';\n\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport AppReactSamurai from \"./App\";\n\n\n\n\n\n\n    ReactDOM.render(\n\n        <AppReactSamurai/>\n\n        ,\n        document.getElementById('root')\n    );\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/Spinner-1s-200px.36ed4c09.svg\";","import React from 'react';\r\nimport fetchingImg from \"../assets/images/Spinner-1s-200px.svg\";\r\n\r\nlet Preloader = () => {\r\n    return  (\r\n            <div>\r\n                <img src={fetchingImg}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3US0m\",\"selectedPage\":\"Users_selectedPage__3LGXG\"};","export default __webpack_public_path__ + \"static/media/user-png-image-9.ab7efdc7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Pc-H\",\"loginBlock\":\"Header_loginBlock__1r1mc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2l30m\",\"errorLOrP\":\"Login_errorLOrP__pHQIi\"};","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n    let UsersContainerForRedirect=connect(mapStateForRedirect)(RedirectComponent)\r\n    return UsersContainerForRedirect;\r\n    }\r\n\r\n\r\n\r\n"],"sourceRoot":""}